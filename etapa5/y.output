Terminals unused in grammar

    TOKEN_ERROR


State 123 conflicts: 1 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: ldecl_globais

    2 ldecl_globais: lista_decl lista_code

    3 lista_decl: decl_var lista_decl
    4           | decl_vetor lista_decl
    5           | decl_proto lista_decl
    6           | %empty

    7 decl_var: tipo TK_IDENTIFIER '=' literal ';'

    8 decl_vetor: tipo TK_IDENTIFIER '[' LIT_INT ']' opcional ';'

    9 decl_proto: tipo TK_IDENTIFIER '(' lparam ')' ';'

   10 opcional: literal opcional
   11         | %empty

   12 lparam: param fim_param
   13       | %empty

   14 fim_param: ',' param fim_param
   15          | %empty

   16 param: tipo TK_IDENTIFIER

   17 lista_code: decl_func lista_code
   18           | %empty

   19 decl_func: KW_CODE TK_IDENTIFIER cmd

   20 cmd: cmd_atribuicao
   21    | cmd_print
   22    | cmd_return
   23    | cmd_ctrl_fluxo
   24    | bloco
   25    | ';'

   26 cmd_atribuicao: TK_IDENTIFIER '=' expr ';'
   27               | TK_IDENTIFIER '[' expr ']' '=' expr ';'

   28 cmd_print: KW_PRINT aux_print ';'

   29 aux_print: LIT_STRING
   30          | expr

   31 cmd_return: KW_RETURN expr ';'

   32 cmd_ctrl_fluxo: cmd_if
   33               | KW_WHILE '(' expr ')' cmd

   34 cmd_if: KW_IF '(' expr ')' cmd tail

   35 tail: KW_ELSE cmd
   36     | %empty

   37 bloco: '{' lista_cmd '}'

   38 lista_cmd: cmd lista_cmd
   39          | %empty

   40 expr: expr '+' expr
   41     | expr '-' expr
   42     | expr '/' expr
   43     | expr '*' expr
   44     | expr '<' expr
   45     | expr '>' expr
   46     | expr '&' expr
   47     | expr '|' expr
   48     | expr '~' expr
   49     | expr OPERATOR_DIF expr
   50     | expr OPERATOR_EQ expr
   51     | expr OPERATOR_GE expr
   52     | expr OPERATOR_LE expr
   53     | KW_INPUT '(' tipo ')'
   54     | TK_IDENTIFIER
   55     | TK_IDENTIFIER '(' lista_args ')'
   56     | TK_IDENTIFIER '[' expr ']'
   57     | LIT_CHAR
   58     | LIT_INT
   59     | LIT_REAL
   60     | '(' expr ')'

   61 lista_args: expr lista_args_fim
   62           | %empty

   63 lista_args_fim: ',' expr lista_args_fim
   64               | %empty

   65 tipo: KW_CHAR
   66     | KW_INT
   67     | KW_FLOAT

   68 literal: LIT_CHAR
   69        | LIT_INT
   70        | LIT_REAL
   71        | LIT_STRING


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 46
    '(' (40) 9 33 34 53 55 60
    ')' (41) 9 33 34 53 55 60
    '*' (42) 43
    '+' (43) 40
    ',' (44) 14 63
    '-' (45) 41
    '/' (47) 42
    ';' (59) 7 8 9 25 26 27 28 31
    '<' (60) 44
    '=' (61) 7 26 27
    '>' (62) 45
    '[' (91) 8 27 56
    ']' (93) 8 27 56
    '{' (123) 37
    '|' (124) 47
    '}' (125) 37
    '~' (126) 48
    error (256)
    KW_CHAR (258) 65
    KW_INT (259) 66
    KW_FLOAT (260) 67
    KW_CODE (261) 19
    KW_IF (262) 34
    KW_ELSE (263) 35
    KW_WHILE (264) 33
    KW_INPUT (265) 53
    KW_PRINT (266) 28
    KW_RETURN (267) 31
    OPERATOR_LE (268) 52
    OPERATOR_GE (269) 51
    OPERATOR_EQ (270) 50
    OPERATOR_DIF (271) 49
    TK_IDENTIFIER <symbol> (272) 7 8 9 16 19 26 27 54 55 56
    LIT_INT <symbol> (273) 8 58 69
    LIT_REAL <symbol> (274) 59 70
    LIT_CHAR <symbol> (275) 57 68
    LIT_STRING <symbol> (276) 29 71
    TOKEN_ERROR (277)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    programa <ast> (42)
        on left: 1
        on right: 0
    ldecl_globais <ast> (43)
        on left: 2
        on right: 1
    lista_decl <ast> (44)
        on left: 3 4 5 6
        on right: 2 3 4 5
    decl_var <ast> (45)
        on left: 7
        on right: 3
    decl_vetor <ast> (46)
        on left: 8
        on right: 4
    decl_proto <ast> (47)
        on left: 9
        on right: 5
    opcional <ast> (48)
        on left: 10 11
        on right: 8 10
    lparam <ast> (49)
        on left: 12 13
        on right: 9
    fim_param <ast> (50)
        on left: 14 15
        on right: 12 14
    param <ast> (51)
        on left: 16
        on right: 12 14
    lista_code <ast> (52)
        on left: 17 18
        on right: 2 17
    decl_func <ast> (53)
        on left: 19
        on right: 17
    cmd <ast> (54)
        on left: 20 21 22 23 24 25
        on right: 19 33 34 35 38
    cmd_atribuicao <ast> (55)
        on left: 26 27
        on right: 20
    cmd_print <ast> (56)
        on left: 28
        on right: 21
    aux_print <ast> (57)
        on left: 29 30
        on right: 28
    cmd_return <ast> (58)
        on left: 31
        on right: 22
    cmd_ctrl_fluxo <ast> (59)
        on left: 32 33
        on right: 23
    cmd_if <ast> (60)
        on left: 34
        on right: 32
    tail <ast> (61)
        on left: 35 36
        on right: 34
    bloco <ast> (62)
        on left: 37
        on right: 24
    lista_cmd <ast> (63)
        on left: 38 39
        on right: 37 38
    expr <ast> (64)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
        on right: 26 27 30 31 33 34 40 41 42 43 44 45 46 47 48 49 50 51 52 56 60 61 63
    lista_args <ast> (65)
        on left: 61 62
        on right: 55
    lista_args_fim <ast> (66)
        on left: 63 64
        on right: 61 63
    tipo <ast> (67)
        on left: 65 66 67
        on right: 7 8 9 16 53
    literal <ast> (68)
        on left: 68 69 70 71
        on right: 7 10


State 0

    0 $accept: . programa $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 6 (lista_decl)

    programa       go to state 4
    ldecl_globais  go to state 5
    lista_decl     go to state 6
    decl_var       go to state 7
    decl_vetor     go to state 8
    decl_proto     go to state 9
    tipo           go to state 10


State 1

   65 tipo: KW_CHAR .

    $default  reduce using rule 65 (tipo)


State 2

   66 tipo: KW_INT .

    $default  reduce using rule 66 (tipo)


State 3

   67 tipo: KW_FLOAT .

    $default  reduce using rule 67 (tipo)


State 4

    0 $accept: programa . $end

    $end  shift, and go to state 11


State 5

    1 programa: ldecl_globais .

    $default  reduce using rule 1 (programa)


State 6

    2 ldecl_globais: lista_decl . lista_code

    KW_CODE  shift, and go to state 12

    $default  reduce using rule 18 (lista_code)

    lista_code  go to state 13
    decl_func   go to state 14


State 7

    3 lista_decl: decl_var . lista_decl

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 6 (lista_decl)

    lista_decl  go to state 15
    decl_var    go to state 7
    decl_vetor  go to state 8
    decl_proto  go to state 9
    tipo        go to state 10


State 8

    4 lista_decl: decl_vetor . lista_decl

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 6 (lista_decl)

    lista_decl  go to state 16
    decl_var    go to state 7
    decl_vetor  go to state 8
    decl_proto  go to state 9
    tipo        go to state 10


State 9

    5 lista_decl: decl_proto . lista_decl

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 6 (lista_decl)

    lista_decl  go to state 17
    decl_var    go to state 7
    decl_vetor  go to state 8
    decl_proto  go to state 9
    tipo        go to state 10


State 10

    7 decl_var: tipo . TK_IDENTIFIER '=' literal ';'
    8 decl_vetor: tipo . TK_IDENTIFIER '[' LIT_INT ']' opcional ';'
    9 decl_proto: tipo . TK_IDENTIFIER '(' lparam ')' ';'

    TK_IDENTIFIER  shift, and go to state 18


State 11

    0 $accept: programa $end .

    $default  accept


State 12

   19 decl_func: KW_CODE . TK_IDENTIFIER cmd

    TK_IDENTIFIER  shift, and go to state 19


State 13

    2 ldecl_globais: lista_decl lista_code .

    $default  reduce using rule 2 (ldecl_globais)


State 14

   17 lista_code: decl_func . lista_code

    KW_CODE  shift, and go to state 12

    $default  reduce using rule 18 (lista_code)

    lista_code  go to state 20
    decl_func   go to state 14


State 15

    3 lista_decl: decl_var lista_decl .

    $default  reduce using rule 3 (lista_decl)


State 16

    4 lista_decl: decl_vetor lista_decl .

    $default  reduce using rule 4 (lista_decl)


State 17

    5 lista_decl: decl_proto lista_decl .

    $default  reduce using rule 5 (lista_decl)


State 18

    7 decl_var: tipo TK_IDENTIFIER . '=' literal ';'
    8 decl_vetor: tipo TK_IDENTIFIER . '[' LIT_INT ']' opcional ';'
    9 decl_proto: tipo TK_IDENTIFIER . '(' lparam ')' ';'

    '='  shift, and go to state 21
    '['  shift, and go to state 22
    '('  shift, and go to state 23


State 19

   19 decl_func: KW_CODE TK_IDENTIFIER . cmd

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    TK_IDENTIFIER  shift, and go to state 28
    ';'            shift, and go to state 29
    '{'            shift, and go to state 30

    cmd             go to state 31
    cmd_atribuicao  go to state 32
    cmd_print       go to state 33
    cmd_return      go to state 34
    cmd_ctrl_fluxo  go to state 35
    cmd_if          go to state 36
    bloco           go to state 37


State 20

   17 lista_code: decl_func lista_code .

    $default  reduce using rule 17 (lista_code)


State 21

    7 decl_var: tipo TK_IDENTIFIER '=' . literal ';'

    LIT_INT     shift, and go to state 38
    LIT_REAL    shift, and go to state 39
    LIT_CHAR    shift, and go to state 40
    LIT_STRING  shift, and go to state 41

    literal  go to state 42


State 22

    8 decl_vetor: tipo TK_IDENTIFIER '[' . LIT_INT ']' opcional ';'

    LIT_INT  shift, and go to state 43


State 23

    9 decl_proto: tipo TK_IDENTIFIER '(' . lparam ')' ';'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 13 (lparam)

    lparam  go to state 44
    param   go to state 45
    tipo    go to state 46


State 24

   34 cmd_if: KW_IF . '(' expr ')' cmd tail

    '('  shift, and go to state 47


State 25

   33 cmd_ctrl_fluxo: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 48


State 26

   28 cmd_print: KW_PRINT . aux_print ';'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    LIT_STRING     shift, and go to state 54
    '('            shift, and go to state 55

    aux_print  go to state 56
    expr       go to state 57


State 27

   31 cmd_return: KW_RETURN . expr ';'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 58


State 28

   26 cmd_atribuicao: TK_IDENTIFIER . '=' expr ';'
   27               | TK_IDENTIFIER . '[' expr ']' '=' expr ';'

    '='  shift, and go to state 59
    '['  shift, and go to state 60


State 29

   25 cmd: ';' .

    $default  reduce using rule 25 (cmd)


State 30

   37 bloco: '{' . lista_cmd '}'

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    TK_IDENTIFIER  shift, and go to state 28
    ';'            shift, and go to state 29
    '{'            shift, and go to state 30

    $default  reduce using rule 39 (lista_cmd)

    cmd             go to state 61
    cmd_atribuicao  go to state 32
    cmd_print       go to state 33
    cmd_return      go to state 34
    cmd_ctrl_fluxo  go to state 35
    cmd_if          go to state 36
    bloco           go to state 37
    lista_cmd       go to state 62


State 31

   19 decl_func: KW_CODE TK_IDENTIFIER cmd .

    $default  reduce using rule 19 (decl_func)


State 32

   20 cmd: cmd_atribuicao .

    $default  reduce using rule 20 (cmd)


State 33

   21 cmd: cmd_print .

    $default  reduce using rule 21 (cmd)


State 34

   22 cmd: cmd_return .

    $default  reduce using rule 22 (cmd)


State 35

   23 cmd: cmd_ctrl_fluxo .

    $default  reduce using rule 23 (cmd)


State 36

   32 cmd_ctrl_fluxo: cmd_if .

    $default  reduce using rule 32 (cmd_ctrl_fluxo)


State 37

   24 cmd: bloco .

    $default  reduce using rule 24 (cmd)


State 38

   69 literal: LIT_INT .

    $default  reduce using rule 69 (literal)


State 39

   70 literal: LIT_REAL .

    $default  reduce using rule 70 (literal)


State 40

   68 literal: LIT_CHAR .

    $default  reduce using rule 68 (literal)


State 41

   71 literal: LIT_STRING .

    $default  reduce using rule 71 (literal)


State 42

    7 decl_var: tipo TK_IDENTIFIER '=' literal . ';'

    ';'  shift, and go to state 63


State 43

    8 decl_vetor: tipo TK_IDENTIFIER '[' LIT_INT . ']' opcional ';'

    ']'  shift, and go to state 64


State 44

    9 decl_proto: tipo TK_IDENTIFIER '(' lparam . ')' ';'

    ')'  shift, and go to state 65


State 45

   12 lparam: param . fim_param

    ','  shift, and go to state 66

    $default  reduce using rule 15 (fim_param)

    fim_param  go to state 67


State 46

   16 param: tipo . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 68


State 47

   34 cmd_if: KW_IF '(' . expr ')' cmd tail

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 69


State 48

   33 cmd_ctrl_fluxo: KW_WHILE '(' . expr ')' cmd

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 70


State 49

   53 expr: KW_INPUT . '(' tipo ')'

    '('  shift, and go to state 71


State 50

   54 expr: TK_IDENTIFIER .
   55     | TK_IDENTIFIER . '(' lista_args ')'
   56     | TK_IDENTIFIER . '[' expr ']'

    '['  shift, and go to state 72
    '('  shift, and go to state 73

    $default  reduce using rule 54 (expr)


State 51

   58 expr: LIT_INT .

    $default  reduce using rule 58 (expr)


State 52

   59 expr: LIT_REAL .

    $default  reduce using rule 59 (expr)


State 53

   57 expr: LIT_CHAR .

    $default  reduce using rule 57 (expr)


State 54

   29 aux_print: LIT_STRING .

    $default  reduce using rule 29 (aux_print)


State 55

   60 expr: '(' . expr ')'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 74


State 56

   28 cmd_print: KW_PRINT aux_print . ';'

    ';'  shift, and go to state 75


State 57

   30 aux_print: expr .
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88

    $default  reduce using rule 30 (aux_print)


State 58

   31 cmd_return: KW_RETURN expr . ';'
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ';'           shift, and go to state 89


State 59

   26 cmd_atribuicao: TK_IDENTIFIER '=' . expr ';'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 90


State 60

   27 cmd_atribuicao: TK_IDENTIFIER '[' . expr ']' '=' expr ';'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 91


State 61

   38 lista_cmd: cmd . lista_cmd

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    TK_IDENTIFIER  shift, and go to state 28
    ';'            shift, and go to state 29
    '{'            shift, and go to state 30

    $default  reduce using rule 39 (lista_cmd)

    cmd             go to state 61
    cmd_atribuicao  go to state 32
    cmd_print       go to state 33
    cmd_return      go to state 34
    cmd_ctrl_fluxo  go to state 35
    cmd_if          go to state 36
    bloco           go to state 37
    lista_cmd       go to state 92


State 62

   37 bloco: '{' lista_cmd . '}'

    '}'  shift, and go to state 93


State 63

    7 decl_var: tipo TK_IDENTIFIER '=' literal ';' .

    $default  reduce using rule 7 (decl_var)


State 64

    8 decl_vetor: tipo TK_IDENTIFIER '[' LIT_INT ']' . opcional ';'

    LIT_INT     shift, and go to state 38
    LIT_REAL    shift, and go to state 39
    LIT_CHAR    shift, and go to state 40
    LIT_STRING  shift, and go to state 41

    $default  reduce using rule 11 (opcional)

    opcional  go to state 94
    literal   go to state 95


State 65

    9 decl_proto: tipo TK_IDENTIFIER '(' lparam ')' . ';'

    ';'  shift, and go to state 96


State 66

   14 fim_param: ',' . param fim_param

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    param  go to state 97
    tipo   go to state 46


State 67

   12 lparam: param fim_param .

    $default  reduce using rule 12 (lparam)


State 68

   16 param: tipo TK_IDENTIFIER .

    $default  reduce using rule 16 (param)


State 69

   34 cmd_if: KW_IF '(' expr . ')' cmd tail
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ')'           shift, and go to state 98


State 70

   33 cmd_ctrl_fluxo: KW_WHILE '(' expr . ')' cmd
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ')'           shift, and go to state 99


State 71

   53 expr: KW_INPUT '(' . tipo ')'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    tipo  go to state 100


State 72

   56 expr: TK_IDENTIFIER '[' . expr ']'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 101


State 73

   55 expr: TK_IDENTIFIER '(' . lista_args ')'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    $default  reduce using rule 62 (lista_args)

    expr        go to state 102
    lista_args  go to state 103


State 74

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr
   60     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ')'           shift, and go to state 104


State 75

   28 cmd_print: KW_PRINT aux_print ';' .

    $default  reduce using rule 28 (cmd_print)


State 76

   52 expr: expr OPERATOR_LE . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 105


State 77

   51 expr: expr OPERATOR_GE . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 106


State 78

   50 expr: expr OPERATOR_EQ . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 107


State 79

   49 expr: expr OPERATOR_DIF . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 108


State 80

   44 expr: expr '<' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 109


State 81

   45 expr: expr '>' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 110


State 82

   46 expr: expr '&' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 111


State 83

   47 expr: expr '|' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 112


State 84

   48 expr: expr '~' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 113


State 85

   40 expr: expr '+' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 114


State 86

   41 expr: expr '-' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 115


State 87

   43 expr: expr '*' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 116


State 88

   42 expr: expr '/' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 117


State 89

   31 cmd_return: KW_RETURN expr ';' .

    $default  reduce using rule 31 (cmd_return)


State 90

   26 cmd_atribuicao: TK_IDENTIFIER '=' expr . ';'
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ';'           shift, and go to state 118


State 91

   27 cmd_atribuicao: TK_IDENTIFIER '[' expr . ']' '=' expr ';'
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ']'           shift, and go to state 119


State 92

   38 lista_cmd: cmd lista_cmd .

    $default  reduce using rule 38 (lista_cmd)


State 93

   37 bloco: '{' lista_cmd '}' .

    $default  reduce using rule 37 (bloco)


State 94

    8 decl_vetor: tipo TK_IDENTIFIER '[' LIT_INT ']' opcional . ';'

    ';'  shift, and go to state 120


State 95

   10 opcional: literal . opcional

    LIT_INT     shift, and go to state 38
    LIT_REAL    shift, and go to state 39
    LIT_CHAR    shift, and go to state 40
    LIT_STRING  shift, and go to state 41

    $default  reduce using rule 11 (opcional)

    opcional  go to state 121
    literal   go to state 95


State 96

    9 decl_proto: tipo TK_IDENTIFIER '(' lparam ')' ';' .

    $default  reduce using rule 9 (decl_proto)


State 97

   14 fim_param: ',' param . fim_param

    ','  shift, and go to state 66

    $default  reduce using rule 15 (fim_param)

    fim_param  go to state 122


State 98

   34 cmd_if: KW_IF '(' expr ')' . cmd tail

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    TK_IDENTIFIER  shift, and go to state 28
    ';'            shift, and go to state 29
    '{'            shift, and go to state 30

    cmd             go to state 123
    cmd_atribuicao  go to state 32
    cmd_print       go to state 33
    cmd_return      go to state 34
    cmd_ctrl_fluxo  go to state 35
    cmd_if          go to state 36
    bloco           go to state 37


State 99

   33 cmd_ctrl_fluxo: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    TK_IDENTIFIER  shift, and go to state 28
    ';'            shift, and go to state 29
    '{'            shift, and go to state 30

    cmd             go to state 124
    cmd_atribuicao  go to state 32
    cmd_print       go to state 33
    cmd_return      go to state 34
    cmd_ctrl_fluxo  go to state 35
    cmd_if          go to state 36
    bloco           go to state 37


State 100

   53 expr: KW_INPUT '(' tipo . ')'

    ')'  shift, and go to state 125


State 101

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr
   56     | TK_IDENTIFIER '[' expr . ']'

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ']'           shift, and go to state 126


State 102

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr
   61 lista_args: expr . lista_args_fim

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ','           shift, and go to state 127

    $default  reduce using rule 64 (lista_args_fim)

    lista_args_fim  go to state 128


State 103

   55 expr: TK_IDENTIFIER '(' lista_args . ')'

    ')'  shift, and go to state 129


State 104

   60 expr: '(' expr ')' .

    $default  reduce using rule 60 (expr)


State 105

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr
   52     | expr OPERATOR_LE expr .

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 52 (expr)


State 106

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   51     | expr OPERATOR_GE expr .
   52     | expr . OPERATOR_LE expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 51 (expr)


State 107

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   50     | expr OPERATOR_EQ expr .
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 50 (expr)


State 108

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   49     | expr OPERATOR_DIF expr .
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 49 (expr)


State 109

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   44     | expr '<' expr .
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 44 (expr)


State 110

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   45     | expr '>' expr .
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 45 (expr)


State 111

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   46     | expr '&' expr .
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 46 (expr)


State 112

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   47     | expr '|' expr .
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 47 (expr)


State 113

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   48     | expr '~' expr .
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 48 (expr)


State 114

   40 expr: expr . '+' expr
   40     | expr '+' expr .
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 40 (expr)


State 115

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   41     | expr '-' expr .
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88

    $default  reduce using rule 41 (expr)


State 116

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   43     | expr '*' expr .
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    $default  reduce using rule 43 (expr)


State 117

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   42     | expr '/' expr .
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    $default  reduce using rule 42 (expr)


State 118

   26 cmd_atribuicao: TK_IDENTIFIER '=' expr ';' .

    $default  reduce using rule 26 (cmd_atribuicao)


State 119

   27 cmd_atribuicao: TK_IDENTIFIER '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 130


State 120

    8 decl_vetor: tipo TK_IDENTIFIER '[' LIT_INT ']' opcional ';' .

    $default  reduce using rule 8 (decl_vetor)


State 121

   10 opcional: literal opcional .

    $default  reduce using rule 10 (opcional)


State 122

   14 fim_param: ',' param fim_param .

    $default  reduce using rule 14 (fim_param)


State 123

   34 cmd_if: KW_IF '(' expr ')' cmd . tail

    KW_ELSE  shift, and go to state 131

    KW_ELSE   [reduce using rule 36 (tail)]
    $default  reduce using rule 36 (tail)

    tail  go to state 132


State 124

   33 cmd_ctrl_fluxo: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 33 (cmd_ctrl_fluxo)


State 125

   53 expr: KW_INPUT '(' tipo ')' .

    $default  reduce using rule 53 (expr)


State 126

   56 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 56 (expr)


State 127

   63 lista_args_fim: ',' . expr lista_args_fim

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 133


State 128

   61 lista_args: expr lista_args_fim .

    $default  reduce using rule 61 (lista_args)


State 129

   55 expr: TK_IDENTIFIER '(' lista_args ')' .

    $default  reduce using rule 55 (expr)


State 130

   27 cmd_atribuicao: TK_IDENTIFIER '[' expr ']' '=' . expr ';'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 51
    LIT_REAL       shift, and go to state 52
    LIT_CHAR       shift, and go to state 53
    '('            shift, and go to state 55

    expr  go to state 134


State 131

   35 tail: KW_ELSE . cmd

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    TK_IDENTIFIER  shift, and go to state 28
    ';'            shift, and go to state 29
    '{'            shift, and go to state 30

    cmd             go to state 135
    cmd_atribuicao  go to state 32
    cmd_print       go to state 33
    cmd_return      go to state 34
    cmd_ctrl_fluxo  go to state 35
    cmd_if          go to state 36
    bloco           go to state 37


State 132

   34 cmd_if: KW_IF '(' expr ')' cmd tail .

    $default  reduce using rule 34 (cmd_if)


State 133

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr
   63 lista_args_fim: ',' expr . lista_args_fim

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ','           shift, and go to state 127

    $default  reduce using rule 64 (lista_args_fim)

    lista_args_fim  go to state 136


State 134

   27 cmd_atribuicao: TK_IDENTIFIER '[' expr ']' '=' expr . ';'
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '/' expr
   43     | expr . '*' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . '&' expr
   47     | expr . '|' expr
   48     | expr . '~' expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 76
    OPERATOR_GE   shift, and go to state 77
    OPERATOR_EQ   shift, and go to state 78
    OPERATOR_DIF  shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '&'           shift, and go to state 82
    '|'           shift, and go to state 83
    '~'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    ';'           shift, and go to state 137


State 135

   35 tail: KW_ELSE cmd .

    $default  reduce using rule 35 (tail)


State 136

   63 lista_args_fim: ',' expr lista_args_fim .

    $default  reduce using rule 63 (lista_args_fim)


State 137

   27 cmd_atribuicao: TK_IDENTIFIER '[' expr ']' '=' expr ';' .

    $default  reduce using rule 27 (cmd_atribuicao)
